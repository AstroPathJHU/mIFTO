setwd('e/code/R/mIFTO'); devtools::load_all()
setwd('e:/code/R/mIFTO')
devtools::load_all()
mIFTO::mIFTOapp()
parallel::clusterExport(
cl=cl, varlist=c("Concentration", "x", "y", "Antibody_Opal",
"titration.type.name","Protocol","Thresholds","paths",
"connected.pixels","flowout","Opal1",
"generate.pxp.image.data"),
envir=my_env)
small.tables.byimage<- parallel::parLapply(
cl,Image.IDs[[x]][[y]],function(z) generate.pxp.image.data(
Concentration, x, y, z, Antibody_Opal,
titration.type.name, Protocol, Thresholds, paths,
connected.pixels, flowout, Opal1))
devtools::load_all()
mIFTO::mIFTOapp()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
?grid.arrange
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
devtools::load_all()
mIFTO::mIFTOapp()
x <- system("ipconfig", intern=TRUE)
x <- x[grep("IPv4", x)]
x <- gsub(".*? ([[:digit:]])", "\\1", x)
x <- x[[1]]
x
?ip
if (!.Platform$OS.type == "windows") {
stop('This is a windows application')
}
stop('This is a windows application')
e
curl::has_internet
curl::has_internet()
stop('No internet connection detected. Internet connection is required.')
!is.null(nslookup("google.com", error = FALSE))
warning('Application has only been tested on windows machines.')
warning('Application has only been tested on windows machines. ',
'Other OS types are not yet supported')
warning(paste('Application has only been tested on windows machines.',
'Other OS types are not yet supported'))
warning(paste('Application has only been tested on windows machines.',
'Other OSs are not yet supported'))
